: RunTests
$* >>~%EOM%
%(
%((?!Filters\:).)*%
%)+
EOM

# TODO: Enable this at some point
# Debugging shows a problem with std::regex_match implementation on msvc
if ($cxx.target.class != 'windows')
{  
  : ListTests
  : Return value is not zero here but number of test - which can change a lot
  $* --list-tests --verbosity high >>~%EOM% != 0
  %(
  %((?!Hidden Test).)*%
  %)+?
  %(
  %.*?[0-9]+? test cases%
  %.*%
  %)
  EOM
}

: ListTags
$* --list-tags >>~%EOM% != 0
All available tags:
%(
%.*%
%)+
EOM

: ListReporters
: Return value is not zero here but number of reporters
$* --list-reporters >>~%EOM% != 0
Available reporters:
%(
%.*%
%)+
EOM

: ListTestNamesOnly
: Return value is not zero here but number of tests
$* --list-test-names-only >>~%EOM% !=0
%(
%((?!Hidden Test).)*%
%)+?
%Regex string matcher.*%
%(
%((?!Hidden Test).)*%
%)+
EOM

: NoAssertions
$* -w NoAssertions >>~%EOM% != 0
%(
%.*%
%)+?
%(No assertions in test case).*%
%(
%.*%
%)+?
EOM

: NoTest
$* Tracker, "___nonexistent_test___" >>~%EOM%
%(
%.*(?!No tests run).*%
%)+?
%No test cases matched '___nonexistent_test___'.*%
%(
%.*(?!No tests run).*%
%)+?
EOM

: UnmatchedOutputFilter
$* [this-tag-does-not-exist] -w NoTests >>~%EOM% != 0
%(
%.*%
%)*?
No test cases matched '[this-tag-does-not-exist]'
%(
%.*%
%)*?
EOM

: FilteredSection_1
$* \#1394 -c RunSection >>~%EOM%
%(
%((?!No tests ran).)*%
%)*?
EOM

: FilteredSection_2
$* \#1394\ nested -c NestedRunSection >>~%EOM%
%(
%((?!No tests ran).)*%
%)*?
EOM

: FilteredSection_GeneratorsDontCauseInfiniteLoop_1
$* "#2025: original repro" -c "fov_0" >>~%EOM%
%(
%((?!inside with fov: 1).)*%
%)*?
inside with fov: 0
%(
%.*%
%)*?
EOM

: FilteredSection_GeneratorsDontCauseInfiniteLoop_2
$* "#2025: same-level sections" -c "A" -c "B" >>~%EOM%
%(
%.*%
%)*?
All tests passed (4 assertions in 1 test case)
%(
%.*%
%)*?
EOM

: RegressionCheck_1670
$* "#1670 regression check" -c A -r compact >>~%EOM%
Passed 1 test case with 2 assertions.

EOM

: VersionCheck
$* -h >>~%EOM%
%(
%.*%
%)*?
%Catch v2\.13\.7%
%(
%.*%
%)*?
EOM

: LibIdentityTest
$*  --libidentify >>~%EOM%
description:    A Catch2 test executable
%(
%.*%
%)*?
EOM

: FilenameAsTagsTest
$* -\# --list-tags >>~%EOM% != 0
%(
%.*%
%)*?
%.*?[#Approx.tests].*%
%(
%.*%
%)*?
EOM

: EscapeSpecialCharacters
$* "Test with special\\, characters \"in name" >>~%EOM%
%(
%.*%
%)*?
%.*?1 assertion in 1 test case.*?%
%(
%.*%
%)*
EOM

: TestsInFile_SimpleSpecs
$* -f $src_base/Misc/plain-old-tests.input >>~%EOM%
%(
%.*%
%)*?
%.*?6 assertions in 2 test cases.*?%
%(
%.*%
%)*
EOM

: TestsInFile_EscapeSpecialCharacters
$* -f $src_base/Misc/special-characters-in-file.input >>~%EOM%
%(
%.*%
%)*?
%.*?1 assertion in 1 test case.*?%
%(
%.*%
%)*
EOM

: TestsInFile_InvalidTestNames_1
$* -f $src_base/Misc/invalid-test-names.input >>~%EOM%
Invalid Filter: "Test with special, characters in \" name"
%(
%.*%
%)*?
EOM

: TestsInFile_InvalidTestNames_2
$* -f $src_base/Misc/invalid-test-names.input >>~%EOM%
%(
%.*%
%)*?
No tests ran

EOM

: MinDuration_SimpleThreshold
$* --min-duration 0.22 [min_duration_test] >>~%EOM%
%(
%((?!sleep_for_100ms).*)%
%)+?
%.*?s: sleep_for_250ms%
%(
%.*%
%)+?
EOM

: MinDuration_DurationOverrideYes
: -d yes overrides the threshold
:
: We should see the faster test even
: with a ridiculous high min duration threshold
$* --min-duration 1.0 -d yes [min_duration_test] >>~%EOM%
%(
%.*%
%)+?
%.*?s: sleep_for_100ms%
%(
%.*%
%)+?
EOM

: MinDuration_DurationOverrideNo
: -d no overrides the threshold
:
: We should never see any tests even
: with ridiculously low min duration threshold
$* --min-duration 0.0001 -d no [min_duration_test] >>~%EOM%
%(
%((?!sleep_for_250ms).*)%
%)+?
EOM
